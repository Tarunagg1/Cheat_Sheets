-------------------------------------------------directories structure start
e2e[
    end to end text script

]

node modle [
    all module and libraries reside
]

src[
    this is main folder workspacce reside inside
    -app -> it is the place where all component services directories pipes ets
    - app.component.spes.ts => it mean thease are test scripts
    - app.component.ts => where all the files which realeted to component
    - app.module.ts => iit is module
]

enviroment[
    here we will keep configration variables or pipelines dev test
]

----------------------------------------------------------------------------------
main.ts[
    --it is main file where runing started
    -by default appmodule inside
    -platformBrowserDynamic it initilize te browser
    -bootstrapModule is the main whichs loads and starts the application
    --yes we can change bootstrapModule default module
]
----------------------------------------------------------------------------------
style.css[
    containe all globle style like font etc
]
angular.json[
    contain all the cobnfigration of projects
]
karma.conf.js[
    confi test scripts
    karma runner our unit testing
]

package.json[
    -to understand existing application we first go to pkg.json

]
package-lock.json[

]

-------------------------------------------------directories structure end

Angular cli commands
-----------------------
1. ng new projectname /// to create new projects 
2. angular v  //////// to give all about ng
3. ng genrate what-we-want-to-genrate  <name> ////////// it take parameter what we want to genrate [component,mudule,service,middleware,pipe]
 -sortcut
   - ng g c //// ng genrate component
   - ng g s //// servoce

4. ng serve
    - user to compile our application/
    -by default usses 4200 port
    - we can chane port number ex => ng serve --port 4300  //////// now it run 4300 port
    -production 

5. ng test 
    - it help to run all our test unit
    -test are run using kerma runner

6. ng e2e
    - it will test all end to end tests
    -it is run protracter files

7. ng update
    - upgrade the project to latest verssion

8. ng lint
    -check the syntex

---------------------------------------------- end cli commands

all abouts angular mudules
------------------------------------
 1. module are the small logical functionality
 2. login module
    -register
    -login
    -forgot pass
    -change pass
3. mudule have components directories pipes
4. it allows us to esay to maintain debug 
5. by default atleast one module exists in angular which is call app module
6. every module needs to define by @ngMudule
7. import other mudule inside the mudule
8. ng genrate module <module-name>

------------------------------------ all abouts angular moduls ends


all abouts angular Decorators
------------------------------------
1. Decorators invoke on run time
2. Decorators are the function which return function
3. Decorators allows us to invoke function
4. it will allways start with @
5. @ngModule @ngComponent @Input @Output
6. these decorators data have its meta data
7. some meta data are mendotry some are optional
8. function decorators class decorators 

------------------------------------ all abouts angular Decorators


All abouts angular component
------------------------------------
1. Component is a smaller functionality which can be reuse multipul time in the application
2. smaller feture inside bigger functionality
    -login -component
    -register -component
    -forgot -component
3. allows esay to develop and maintain or dubug
4. Tree hierarchy is made of component parent child child 2
5. angular comes default impt component which is app component
    -templateUrl or template
    -styleUrl
6. u can have component inside component and its call "sub component"
7. we can genrate component using ng g c <component-name> commands
8. we can genrate component inside any module 
9. we can include component from the other module into app-module or any other module

------------------------------------ all abouts angular component

All abouts angular directives
------------------------------------
1. threee types of directives
   -component directives
     --every directives have atleast 1 directives(component)
   -structural directives
     --these directives alter the structure of the template 
     --ngfor ngif ngswitch
     --ngfor ngwhile
   -attribute directives
      --ngclass and ngStyle

2. it help to chage structure inside template

------------------------------------ all abouts angular directives


All abouts angular If
------------------------------------
1. *ngIf statement
      -built in structural directives
      -start with * symbol
      -expression resolve with true or false
2. *ngIf with the else statement
    -use with <ng-template></ng-template> directive

------------------------------------ all abouts angular ngIf



All abouts angular Switch
------------------------------------
1. ngSwitch
      -built in structural directives
      -[ngSwitch]="Enter Val"
      -starts whith *ngSwitchCase
      -it is use to compare more then one expression at a time
         --unlike *ngIf
         --we have multipul checks in ngswitch

Syntax :-
 <div [ngSwitch]="switchvalue">
    <div *ngSwitchCase="1">Case 1</div>
    <div *ngSwitchCase="2">Case 2</div>
    <div *ngSwitchCase="3">Case 3</div>
    <div *ngSwitchCase="4">Case 4</div>
    <div *ngSwitchCase="4">Case 4</div>
    <div *ngSwitchDefault="4">Default</div>    
</div>

------------------------------------ all abouts angular switch

All abouts angular Loops
------------------------------------
1.
------------------------------------ all abouts angular Loop


























