Docker client -> is a tool we issue commands to for reaching out docker demon

Docker demon -> is a service that run on ur host os. it is responsible for running container


Image -> It is a single file with all dependencies and configration.

Container -> it contain isolated set of hardware reposes run's on our computer and use machine resources.



namespacing -> we'll do islation of resources by process in this.

controll group -> limit the resources usege.


COMMANDS
docker run == docker create + docker run; ->
docker images -> to see all install images
docker rmi imgid -> delete the image

docker run anyappname  -> to run docker

docker run anyappname ls -> to show file structure snapshot

docker ps -> it give us all active running container and it's meta data meta data of container like name,img,ports

docker ps -a -> it give us all active runnning and exited container



docker ps --all -> to show all containers and and also which are stoped in past

docker stop id -> stop container waya container id
docker statrt id -> restartthe stop container
docker pull imagename ->  to pull img form registery
docker build -> build img from docker files
docker push -> push yoour img to repositry to registery
docker commit -> create a new image from a container Changes
docker kill id -> stop container waya container id forcefully


docker logs id -> to view all logs what container doing.



docker rm :id --> for remove container
docker rm -f :id --> for remove container forcefully

docker exec -it container_id   -> it will move you inside
for get out from container write exit

# ************************************ NETWORK ********************************
docker network create mongo-express
docker network ls

# ************************************ NODE RUN IN DOCKER CONTAINER ********************************
docker run -it -d --name rabbitmq -p 4001:4001 rabbitmq  -- start process
docker run -it -d --name rediss -p 4002:4002 redis   -- execute process

docker pull mongo
docker pull mongo-express
docker run -d -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=password --name mongodb --net mongo-network mongo -> run docker client run
docker run -d -p 8081:8081 -e ME_CONFIG_MONGODB_ADMINUSERNAME=admin -e ME_CONFIG_MONGODB_ADMINPASSWORD=password --net mongo-network --name mongo-express -e ME_CONFIG_MONGODB_SERVER=mongodbb mongo-express


# ************************************ PUSH IMAGE ON DOCKER HUB ********************************
docker login
docker tag custom-python-image arunaggarwal096/custom-python-image



################################################################ KUBERNETES ################################################################################



















































